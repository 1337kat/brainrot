--// ==========================================================
--//  CLIENT: Brainrot Ownership Tracker (Owned-Only View)
--// ==========================================================

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Player = Players.LocalPlayer

-- Required modules from Brainrot
local Synchronizer = require(ReplicatedStorage.Packages.Synchronizer)
local Animals = require(ReplicatedStorage.Datas.Animals)
local Rarities = require(ReplicatedStorage.Datas.Rarities)

--// === GUI SETUP ===

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "BrainrotOwnershipGui"
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true
ScreenGui.Parent = Player:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 380, 0, 480)
Frame.Position = UDim2.new(0, 20, 0.5, -240)
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Frame.BorderSizePixel = 0
Frame.BackgroundTransparency = 0.2
Frame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundTransparency = 1
Title.Text = "üêæ Owned Brainrots by Player"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 16
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Parent = Frame

local Scroller = Instance.new("ScrollingFrame")
Scroller.Size = UDim2.new(1, -10, 1, -40)
Scroller.Position = UDim2.new(0, 5, 0, 35)
Scroller.BackgroundTransparency = 1
Scroller.ScrollBarThickness = 6
Scroller.AutomaticCanvasSize = Enum.AutomaticSize.Y
Scroller.CanvasSize = UDim2.new(0, 0, 0, 0)
Scroller.Parent = Frame

local UIList = Instance.new("UIListLayout")
UIList.Padding = UDim.new(0, 8)
UIList.Parent = Scroller

--// === UTILITIES ===

local function safeGetData(plr)
	local ok, data = pcall(function()
		return Synchronizer:Get(plr)
	end)
	return (ok and data) or nil
end

local function getOwnedAnimals(plr)
	local owned = {}
	local data = safeGetData(plr)
	if data then
		for _, podium in data:Get("AnimalPodiums") do
			if type(podium) == "table" and podium.Index then
				owned[podium.Index] = true
			end
		end
	end
	return owned
end

local function rarityColor(name)
	local info = Animals[name]
	if not info then return Color3.fromRGB(180, 180, 180) end
	local r = Rarities[info.Rarity]
	return r and r.Color or Color3.fromRGB(180, 180, 180)
end

--// === GUI CONSTRUCTION ===

local playerFrames = {}

local function createPlayerSection(plr)
	local owned = getOwnedAnimals(plr)
	local ownedList = {}

	for name in pairs(owned) do
		table.insert(ownedList, name)
	end
	table.sort(ownedList)

	local container = Instance.new("Frame")
	container.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	container.BorderSizePixel = 0
	container.AutomaticSize = Enum.AutomaticSize.Y
	container.Size = UDim2.new(1, -10, 0, 30)
	container.Name = plr.Name .. "_Section"
	container.Parent = Scroller

	local nameLabel = Instance.new("TextLabel")
	nameLabel.Size = UDim2.new(1, -10, 0, 22)
	nameLabel.Position = UDim2.new(0, 5, 0, 4)
	nameLabel.BackgroundTransparency = 1
	nameLabel.Font = Enum.Font.GothamBold
	nameLabel.TextSize = 15
	nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	nameLabel.TextXAlignment = Enum.TextXAlignment.Left
	nameLabel.Text = plr.DisplayName .. " (" .. plr.Name .. ")"
	nameLabel.Parent = container

	local animalsLabel = Instance.new("TextLabel")
	animalsLabel.BackgroundTransparency = 1
	animalsLabel.Font = Enum.Font.Code
	animalsLabel.TextSize = 13
	animalsLabel.TextXAlignment = Enum.TextXAlignment.Left
	animalsLabel.TextYAlignment = Enum.TextYAlignment.Top
	animalsLabel.Position = UDim2.new(0, 5, 0, 24)
	animalsLabel.Size = UDim2.new(1, -10, 0, 0)
	animalsLabel.AutomaticSize = Enum.AutomaticSize.Y
	animalsLabel.RichText = true
	animalsLabel.Parent = container

	if #ownedList == 0 then
		animalsLabel.Text = "<i>No Brainrots</i>"
	else
		local lines = {}
		for _, aName in ipairs(ownedList) do
			local c = rarityColor(aName)
			local hex = string.format("#%02x%02x%02x", c.R * 255, c.G * 255, c.B * 255)
			table.insert(lines, string.format("<font color='%s'>%s</font>", hex, aName))
		end
		animalsLabel.Text = table.concat(lines, ", ")
	end

	playerFrames[plr] = container
end

local function removePlayerSection(plr)
	if playerFrames[plr] then
		playerFrames[plr]:Destroy()
		playerFrames[plr] = nil
	end
end

local function refreshAll()
	for plr in pairs(playerFrames) do
		removePlayerSection(plr)
	end
	for _, plr in ipairs(Players:GetPlayers()) do
		createPlayerSection(plr)
	end
end

--// === LIVE UPDATES ===

Players.PlayerAdded:Connect(function(plr)
	task.wait(1)
	createPlayerSection(plr)
end)

Players.PlayerRemoving:Connect(removePlayerSection)

local localData = Synchronizer:Wait(Player)
if localData then
	localData:OnChanged("AnimalAddedOrRemoved", function()
		refreshAll()
	end)
end

refreshAll()
print("[BrainrotOwnershipGui] showing owned animals only.")
