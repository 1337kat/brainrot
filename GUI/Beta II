--// ==========================================================
--//  CLIENT: Brainrot Plot Ownership Tracker (Grouped + N Toggle)
--// ==========================================================

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local Player = Players.LocalPlayer

-- Required data tables
local Animals = require(ReplicatedStorage.Datas.Animals)
local Rarities = require(ReplicatedStorage.Datas.Rarities)

-- === GUI SETUP ===

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "BrainrotPlotGui"
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true
ScreenGui.Parent = Player:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 340, 0, 420)
Frame.Position = UDim2.new(0, 20, 0.5, -210)
Frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true
Frame.ClipsDescendants = true
Frame.Parent = ScreenGui

local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0, 10)
Corner.Parent = Frame

local TitleBar = Instance.new("TextLabel")
TitleBar.Size = UDim2.new(1, 0, 0, 28)
TitleBar.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
TitleBar.BackgroundTransparency = 0.15
TitleBar.Font = Enum.Font.GothamBold
TitleBar.Text = "üêæ BrainRots by Plot"
TitleBar.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleBar.TextSize = 14
TitleBar.ZIndex = 2
TitleBar.Parent = Frame

local Scroller = Instance.new("ScrollingFrame")
Scroller.Size = UDim2.new(1, -8, 1, -36)
Scroller.Position = UDim2.new(0, 4, 0, 30)
Scroller.BackgroundTransparency = 1
Scroller.ScrollBarThickness = 5
Scroller.AutomaticCanvasSize = Enum.AutomaticSize.Y
Scroller.CanvasSize = UDim2.new(0, 0, 0, 0)
Scroller.ClipsDescendants = true
Scroller.Parent = Frame

local UIList = Instance.new("UIListLayout")
UIList.Padding = UDim.new(0, 4)
UIList.SortOrder = Enum.SortOrder.LayoutOrder
UIList.Parent = Scroller

local UIPadding = Instance.new("UIPadding")
UIPadding.PaddingTop = UDim.new(0, 4)
UIPadding.PaddingLeft = UDim.new(0, 4)
UIPadding.PaddingRight = UDim.new(0, 4)
UIPadding.Parent = Scroller

-- === UTILITIES ===

local Plots = Workspace:WaitForChild("Plots")

local function rarityColor(name)
	local info = Animals[name]
	if not info then return Color3.fromRGB(180, 180, 180) end
	local r = Rarities[info.Rarity]
	return r and r.Color or Color3.fromRGB(180, 180, 180)
end

local function getPlotOwnerName(plot)
	local plotSign = plot:FindFirstChild("PlotSign", true)
	if plotSign then
		local label = plotSign:FindFirstChildWhichIsA("TextLabel", true)
		if label and label.Text then
			local txt = label.Text
			if txt == "Empty Base" or txt == "YOUR BASE" then
				return "üü¶ Empty Base"
			else
				return "üë§ " .. txt
			end
		end
	end
	return "üü¶ Empty Base"
end

local function getPlotAnimals(plot)
	local found = {}
	for _, obj in ipairs(plot:GetDescendants()) do
		if obj:IsA("Model") and Animals[obj.Name] then
			table.insert(found, obj.Name)
		end
	end
	table.sort(found)
	return found
end

-- === GUI POPULATION ===

local plotFrames = {}
local emptyPlots = {}

local function createPlotSection(plot)
	local ownerName = getPlotOwnerName(plot)
	local animals = getPlotAnimals(plot)

	if ownerName == "üü¶ Empty Base" then
		table.insert(emptyPlots, plot)
		return
	end

	local container = Instance.new("Frame")
	container.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	container.BorderSizePixel = 0
	container.AutomaticSize = Enum.AutomaticSize.Y
	container.Size = UDim2.new(1, -4, 0, 28)
	container.Name = ownerName .. "_Section"
	container.Parent = Scroller

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 6)
	corner.Parent = container

	local nameLabel = Instance.new("TextLabel")
	nameLabel.Size = UDim2.new(1, -8, 0, 20)
	nameLabel.Position = UDim2.new(0, 6, 0, 4)
	nameLabel.BackgroundTransparency = 1
	nameLabel.Font = Enum.Font.GothamBold
	nameLabel.TextSize = 13
	nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	nameLabel.TextXAlignment = Enum.TextXAlignment.Left
	nameLabel.Text = ownerName
	nameLabel.Parent = container

	local animalsLabel = Instance.new("TextLabel")
	animalsLabel.BackgroundTransparency = 1
	animalsLabel.Font = Enum.Font.Code
	animalsLabel.TextSize = 12
	animalsLabel.TextXAlignment = Enum.TextXAlignment.Left
	animalsLabel.TextYAlignment = Enum.TextYAlignment.Top
	animalsLabel.Position = UDim2.new(0, 6, 0, 20)
	animalsLabel.Size = UDim2.new(1, -10, 0, 0)
	animalsLabel.AutomaticSize = Enum.AutomaticSize.Y
	animalsLabel.RichText = true
	animalsLabel.TextWrapped = true
	animalsLabel.Parent = container

	if #animals == 0 then
		animalsLabel.Text = "<i>No BrainRots Found</i>"
	else
		local lines = {}
		for _, aName in ipairs(animals) do
			local c = rarityColor(aName)
			local hex = string.format("#%02x%02x%02x", c.R * 255, c.G * 255, c.B * 255)
			table.insert(lines, string.format("<font color='%s'>%s</font>", hex, aName))
		end
		animalsLabel.Text = table.concat(lines, ", ")
	end

	plotFrames[plot] = container
end

-- === UNCLAIMED GROUP SECTION ===

local function createEmptySection()
	if #emptyPlots == 0 then return end

	local groupFrame = Instance.new("Frame")
	groupFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	groupFrame.BorderSizePixel = 0
	groupFrame.AutomaticSize = Enum.AutomaticSize.Y
	groupFrame.Size = UDim2.new(1, -4, 0, 28)
	groupFrame.Parent = Scroller

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 6)
	corner.Parent = groupFrame

	local header = Instance.new("TextButton")
	header.Size = UDim2.new(1, -8, 0, 24)
	header.Position = UDim2.new(0, 6, 0, 4)
	header.BackgroundTransparency = 1
	header.Font = Enum.Font.GothamBold
	header.TextSize = 13
	header.TextColor3 = Color3.fromRGB(180, 220, 255)
	header.TextXAlignment = Enum.TextXAlignment.Left
	header.Text = "‚ñ∏ üü¶ Unclaimed Plots (" .. #emptyPlots .. ")"
	header.Parent = groupFrame

	local listHolder = Instance.new("Frame")
	listHolder.BackgroundTransparency = 1
	listHolder.AutomaticSize = Enum.AutomaticSize.Y
	listHolder.Size = UDim2.new(1, -10, 0, 0)
	listHolder.Position = UDim2.new(0, 6, 0, 28)
	listHolder.Visible = false
	listHolder.Parent = groupFrame

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 2)
	layout.Parent = listHolder

	for _, plot in ipairs(emptyPlots) do
		local label = Instance.new("TextLabel")
		label.BackgroundTransparency = 1
		label.Font = Enum.Font.Code
		label.TextSize = 12
		label.TextColor3 = Color3.fromRGB(160, 160, 160)
		label.TextXAlignment = Enum.TextXAlignment.Left
		label.Text = "<i>Unclaimed Plot</i>"
		label.RichText = true
		label.Size = UDim2.new(1, 0, 0, 16)
		label.Parent = listHolder
	end

	header.MouseButton1Click:Connect(function()
		listHolder.Visible = not listHolder.Visible
		if listHolder.Visible then
			header.Text = "‚ñæ üü¶ Unclaimed Plots (" .. #emptyPlots .. ")"
		else
			header.Text = "‚ñ∏ üü¶ Unclaimed Plots (" .. #emptyPlots .. ")"
		end
	end)
end

-- === MAIN REFRESH ===

local function clearAll()
	for _, frame in pairs(plotFrames) do
		frame:Destroy()
	end
	table.clear(plotFrames)
	table.clear(emptyPlots)
	for _, child in ipairs(Scroller:GetChildren()) do
		if child:IsA("Frame") then
			child:Destroy()
		end
	end
end

local function refreshAll()
	clearAll()
	for _, plot in ipairs(Plots:GetChildren()) do
		createPlotSection(plot)
	end
	createEmptySection()
end

-- === TOGGLE (N key) ===
local visible = true
UserInputService.InputBegan:Connect(function(input, processed)
	if processed then return end
	if input.KeyCode == Enum.KeyCode.N then
		visible = not visible
		Frame.Visible = visible
	end
end)

-- === INITIAL BUILD ===
refreshAll()
print("[BrainrotPlotGui] Grouped per-plot animal ownership display (Draggable + Toggleable).")
